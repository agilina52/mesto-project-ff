{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-41\",\r\n  headers: {\r\n    authorization: \"0b29a7a6-71d4-445b-8202-2b632e1e043c\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst response = (url, fetchOptions) => {\r\n  return fetch(`${config.baseUrl}${url}`, fetchOptions)\r\n      .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  };\r\n\r\nexport const deleteCardFromServer = (cardId) =>\r\n  response(`/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: config.headers,\r\n    });\r\n\r\nexport const setLikeCard = (cardId) =>\r\n  response(`/cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: config.headers,\r\n    });\r\n\r\nexport const setUnlikeCard = (cardId) =>\r\n  response(`/cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: config.headers,\r\n    });\r\n\r\nexport const updateAvatar = (userPhotoLink) =>\r\n  response(`/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        avatar: userPhotoLink,\r\n      }),\r\n    });\r\n\r\nexport const updateProfile = (userProfile) =>\r\n  response(`/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: config.headers,\r\n      body: JSON.stringify(userProfile),\r\n    });\r\n\r\nexport const addCard = (cardData) =>\r\n  response(`/cards`, {\r\n      method: \"POST\",\r\n      headers: config.headers,\r\n      body: JSON.stringify(cardData),\r\n    });\r\n\r\nexport const getUser = () =>\r\n  response(`/users/me`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  });\r\n\r\nexport const getCards = () =>\r\n  response(`/cards`, {\r\n    headers: config.headers,\r\n  });","// Функция создания\r\nimport { deleteCardFromServer, setLikeCard, setUnlikeCard } from \"./api\";\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\nexport function createCard(\r\n  cardData,\r\n  onDeleteCard,\r\n  onLikeCard,\r\n  onOpenImagePopup,\r\n  currentUser\r\n) {\r\n  const cardElement = cardTemplate.cloneNode(true);\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n  const likeCount = cardElement.querySelector(\".card__like-counter\");\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = `Изображение места: ${cardData.name}`;\r\n  cardTitle.textContent = cardData.name;\r\n  likeCount.textContent = cardData.likes.length;\r\n\r\n  if (currentUser._id !== cardData.owner._id) {\r\n    deleteButton.hidden = true;\r\n  }\r\n\r\n  if (cardData.likes.some((count) => count._id === currentUser._id)) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n    console.log(cardData.likes, currentUser._id);\r\n  }\r\n\r\n  deleteButton.addEventListener(\"click\", () =>\r\n    onDeleteCard(deleteButton, cardData._id)\r\n  );\r\n  likeButton.addEventListener(\"click\", () =>\r\n    onLikeCard(cardData._id, likeButton, likeCount)\r\n  );\r\n  cardImage.addEventListener(\"click\", () => {\r\n    const cardData = {\r\n      src: cardImage.src,\r\n      alt: cardImage.alt,\r\n    };\r\n    onOpenImagePopup(cardData);\r\n  });\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport function likeCard(id, likeButton, likeCount) {\r\n  if (likeButton.classList.contains(\"card__like-button_is-active\")) {\r\n    likeButton.classList.remove(\"card__like-button_is-active\");\r\n    setUnlikeCard(id)\r\n      .then((result) => {\r\n        likeCount.textContent = result.likes.length;\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(\"ошибка\");\r\n      });\r\n  } else {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n    setLikeCard(id)\r\n      .then((result) => {\r\n        likeCount.textContent = result.likes.length;\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(\"ошибка\");\r\n      });\r\n  }\r\n}\r\n\r\nexport function deleteCard(deleteButton, id) {\r\n  const cardDelete = deleteButton.closest(\".card\");\r\n  deleteCardFromServer(id)\r\n    .then(() => {\r\n      cardDelete.remove();\r\n    })\r\n    .catch((error) => {\r\n      throw new Error(\"ошибка\");\r\n    });\r\n}\r\n\r\n","function closeEscape(event) {\r\n  if (event.key === \"Escape\") {\r\n    const openedModal = document.querySelector(\".popup_is-opened\");\r\n    if (openedModal) {\r\n      closeModal(openedModal);\r\n    }\r\n  }\r\n}\r\n\r\nexport function closeModal(modal) {\r\n  modal.classList.add(\"popup_is-animated\");\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeEscape);\r\n}\r\n\r\nexport function openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeEscape);\r\n}\r\n\r\nexport function closeOverlay(event) {\r\n  if (event.target.classList.contains(\"popup_is-opened\")) {\r\n    closeModal(event.target);\r\n  }\r\n}\r\n\r\nexport function closeBtn(event) {\r\n  if (event.target.classList.contains(\"popup__close\")) {\r\n    const modal = event.target.closest(\".popup_is-opened\");\r\n    closeModal(modal);\r\n  }\r\n}\r\n\r\nexport function setLoadingState(\r\n  buttonElement,\r\n  isLoading,\r\n  defaultText = \"Сохранить\",\r\n  loadingText = \"Сохранение...\"\r\n) {\r\n  buttonElement.textContent = isLoading ? loadingText : defaultText;\r\n  buttonElement.disabled = isLoading;\r\n}\r\n\r\nexport function cleanUpForm(formElement) {\r\n  const inputList = Array.from(formElement.querySelectorAll(\"input\"));\r\n  inputList.forEach(element => {\r\n    element.value = \"\";\r\n  })\r\n}","// Функция показа ошибки\r\nexport const showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  options\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(options.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(options.errorClass);\r\n};\r\n\r\n// Функция скрытия ошибки\r\nexport const hideInputError = (formElement, inputElement, options) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(options.inputErrorClass);\r\n  errorElement.classList.remove(options.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n// Функция проверки валидности\r\nexport const isValid = (formElement, inputElement, options) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      options\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, options);\r\n  }\r\n};\r\n\r\n// Проверка на невалидные поля//\r\nexport const hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Переключение состояния кнопки\r\nexport const toggleButtonState = (inputList, buttonElement, options) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(options.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(options.inactiveButtonClass);\r\n  }\r\n};\r\n\r\n// Установка обработчиков событий валидации\r\nexport const setEventListeners = (formElement, options) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(options.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(options.submitButtonSelector);\r\n\r\n  // Инициализация состояния кнопки\r\n  toggleButtonState(inputList, buttonElement, options);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      isValid(formElement, inputElement, options);\r\n      toggleButtonState(inputList, buttonElement, options);\r\n    });\r\n  });\r\n};\r\n\r\n// Включение валидации для всех форм\r\nexport const enableValidation = (options) => {\r\n  const formList = Array.from(document.querySelectorAll(options.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, options);\r\n  });\r\n};\r\n\r\nexport const clearValidation = function (modalForm, options) {\r\n  const formInputList = Array.from(\r\n    modalForm.querySelectorAll(options.inputSelector)\r\n  );\r\n  formInputList.forEach((formInput) => {\r\n    hideInputError(modalForm, formInput, options);\r\n  });\r\n  const buttonElement = modalForm.querySelector(\r\n    options.submitButtonSelector\r\n  );\r\n  toggleButtonState(formInputList, buttonElement, options);\r\n};\r\n","import \"./pages/index.css\";\r\nimport { createCard, likeCard, deleteCard } from \"./components/card.js\";\r\nimport {\r\n  closeModal,\r\n  openModal,\r\n  closeOverlay,\r\n  closeBtn,\r\n  setLoadingState,\r\n  cleanUpForm,\r\n} from \"./components/modal.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  updateAvatar,\r\n  addCard,\r\n  getUser,\r\n  getCards,\r\n  updateProfile,\r\n} from \"./components/api.js\";\r\n\r\nlet currentUser = null;\r\nconst cardList = document.querySelector(\".places__list\");\r\n\r\n// Модальные окна\r\nconst modals = document.querySelectorAll(\".popup\");\r\nconst modalEditProfile = document.querySelector(\".popup_type_edit\");\r\nconst modalAddCard = document.querySelector(\".popup_type_new-card\");\r\nconst modalImage = document.querySelector(\".popup_type_image\");\r\nconst inputNameFormNewCard = modalAddCard.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst inputLinkFormNewCard = modalAddCard.querySelector(\r\n  \".popup__input_type_url\"\r\n);\r\nconst modalImageContent = modalImage.querySelector(\".popup__image\");\r\nconst modalImageCaption = modalImage.querySelector(\".popup__caption\");\r\nconst modalEditAvatar = document.querySelector(\".popup_type_edit-avatar\");\r\n\r\n// Кнопки открытия модальных форм\r\nconst buttonEditProfile = document.querySelector(\".profile__edit-button\");\r\nconst buttonAddCard = document.querySelector(\".profile__add-button\");\r\nconst buttonEditAvatar = document.querySelector(\".avatar__edit-button\");\r\n\r\n// Формы модальных окон\r\nconst formModalAddCard = modalAddCard.querySelector(\".popup__form\");\r\nconst formEditProfile = modalEditProfile.querySelector(\".popup__form\");\r\nconst formEditAvatar = modalEditAvatar.querySelector(\".popup__form\");\r\n\r\nconst profileNameInput = formEditProfile.querySelector(\r\n  \".popup__input_type_name\"\r\n);\r\nconst jobInput = formEditProfile.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\n\r\nconst validationOptions = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nfunction openImagePopup(cardData) {\r\n  modalImageContent.src = cardData.src;\r\n  modalImageContent.alt = cardData.alt;\r\n  modalImageCaption.textContent = cardData.alt.replace(\r\n    \"Изображение места: \",\r\n    \"\"\r\n  );\r\n\r\n  openModal(modalImage);\r\n}\r\n\r\nfunction fillProfileForm() {\r\n  profileNameInput.value = currentUser.name;\r\n  jobInput.value = currentUser.about;\r\n}\r\n\r\n// Заполнение шапки профиля\r\nfunction fillUserHeader(userProfile) {\r\n  const userName = document.querySelector(\".profile__title\");\r\n  const userAbout = document.querySelector(\".profile__description\");\r\n  const userAvatar = document.querySelector(\".profile__image\");\r\n  userName.textContent = userProfile.name;\r\n  userAbout.textContent = userProfile.about;\r\n  userAvatar.style.backgroundImage = `url(\"${userProfile.avatar}\")`;\r\n}\r\n\r\nconst handleFormSubmitProfile = (evt) => {\r\n  evt.preventDefault();\r\n  const buttonSave = modalEditProfile.querySelector(\".popup__button\");\r\n  setLoadingState(buttonSave, true);\r\n\r\n  const nameValue = profileNameInput.value;\r\n  const jobValue = jobInput.value;\r\n\r\n  updateProfile({\r\n    name: nameValue,\r\n    about: jobValue,\r\n  })\r\n    .then((result) => {\r\n      currentUser = result;\r\n      fillUserHeader(result);\r\n      closeModal(modalEditProfile);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoadingState(buttonSave, false);\r\n    });\r\n};\r\n\r\nconst handleFormSubmitNewCard = (evt) => {\r\n  evt.preventDefault();\r\n  const buttonSave = modalAddCard.querySelector(\".popup__button\");\r\n  setLoadingState(buttonSave, true);\r\n\r\n  const newCardData = {\r\n    name: inputNameFormNewCard.value,\r\n    link: inputLinkFormNewCard.value,\r\n  };\r\n\r\n  addCard(newCardData)\r\n    .then((result) => {\r\n      const cardElement = createCard(\r\n        result,\r\n        deleteCard,\r\n        likeCard,\r\n        openImagePopup,\r\n        currentUser\r\n      );\r\n\r\n      cardList.prepend(cardElement);\r\n      console.log(result);\r\n      inputNameFormNewCard.value = \"\";\r\n      inputLinkFormNewCard.value = \"\";\r\n      closeModal(modalAddCard);\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Ошибка при создании карточки:\", error);\r\n    })\r\n    .finally(() => {\r\n      setLoadingState(buttonSave, false);\r\n    });\r\n};\r\n\r\nconst handleFormSubmitAvatar = (evt) => {\r\n  evt.preventDefault();\r\n  const urlAvatarInput = modalEditAvatar.querySelector(\r\n    \".popup__input_type_url-avatar\"\r\n  );\r\n  const userAvatar = document.querySelector(\".profile__image\");\r\n  const buttonSave = modalEditAvatar.querySelector(\".popup__button\");\r\n  setLoadingState(buttonSave, true);\r\n\r\n  const urlAvatarValue = urlAvatarInput.value;\r\n  updateAvatar(urlAvatarValue)\r\n    .then((result) => {\r\n      console.log(result);\r\n      userAvatar.style.backgroundImage = `url(\"${result.avatar}\")`;\r\n      closeModal(modalEditAvatar);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoadingState(buttonSave, false);\r\n    });\r\n};\r\n\r\nconst handleButtonEditAvatar = () => {\r\n  clearValidation(modalEditAvatar, validationOptions);\r\n  openModal(modalEditAvatar);  \r\n}\r\n\r\nconst handleButtonEditProfile = () => {\r\n  fillProfileForm();\r\n  clearValidation(modalEditProfile, validationOptions);\r\n  openModal(modalEditProfile);\r\n}\r\n\r\nconst handleButtonAddCard = () => {\r\n  cleanUpForm(modalAddCard);\r\n  clearValidation(modalAddCard, validationOptions);\r\n  openModal(modalAddCard);\r\n}\r\n\r\nbuttonEditAvatar.addEventListener(\"click\", handleButtonEditAvatar);\r\nbuttonEditProfile.addEventListener(\"click\", handleButtonEditProfile);\r\nbuttonAddCard.addEventListener(\"click\", handleButtonAddCard);\r\n\r\nformModalAddCard.addEventListener(\"submit\", handleFormSubmitNewCard);\r\nformEditProfile.addEventListener(\"submit\", handleFormSubmitProfile);\r\nformEditAvatar.addEventListener(\"submit\", handleFormSubmitAvatar);\r\n\r\n// Прослушиватель нажатия по оверлею и по кнопке\r\nmodals.forEach((modal) => {\r\n  modal.addEventListener(\"click\", closeOverlay);\r\n  modal.addEventListener(\"click\", closeBtn);\r\n});\r\n\r\nenableValidation(validationOptions);\r\n\r\n// массив промисов\r\nconst promises = [getUser(), getCards()];\r\nPromise.all(promises)\r\n  .then((results) => {\r\n    const [user, cards] = results;\r\n    currentUser = user;\r\n    cards.forEach(function (element) {\r\n      const cardElement = createCard(\r\n        element,\r\n        deleteCard,\r\n        likeCard,\r\n        openImagePopup,\r\n        currentUser\r\n      );\r\n      cardList.append(cardElement);\r\n    });\r\n    fillUserHeader(user);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n"],"names":["config","baseUrl","headers","authorization","response","url","fetchOptions","fetch","concat","then","res","ok","json","Promise","reject","status","cardTemplate","document","querySelector","content","createCard","cardData","onDeleteCard","onLikeCard","onOpenImagePopup","currentUser","cardElement","cloneNode","deleteButton","cardImage","cardTitle","likeButton","likeCount","src","link","alt","name","textContent","likes","length","_id","owner","hidden","some","count","classList","add","console","log","addEventListener","likeCard","id","cardId","contains","remove","method","result","catch","error","Error","setLikeCard","deleteCard","cardDelete","closest","closeEscape","event","key","openedModal","closeModal","modal","removeEventListener","openModal","closeOverlay","target","closeBtn","setLoadingState","buttonElement","isLoading","defaultText","arguments","undefined","loadingText","disabled","hideInputError","formElement","inputElement","options","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","modalForm","formInputList","Array","from","querySelectorAll","inputSelector","forEach","formInput","submitButtonSelector","cardList","modals","modalEditProfile","modalAddCard","modalImage","inputNameFormNewCard","inputLinkFormNewCard","modalImageContent","modalImageCaption","modalEditAvatar","buttonEditProfile","buttonAddCard","buttonEditAvatar","formModalAddCard","formEditProfile","formEditAvatar","profileNameInput","jobInput","validationOptions","formSelector","openImagePopup","replace","fillUserHeader","userProfile","userName","userAbout","userAvatar","about","style","backgroundImage","avatar","value","element","evt","preventDefault","buttonSave","body","JSON","stringify","prepend","finally","userPhotoLink","urlAvatarInput","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","promises","all","results","_results","user","cards","append","err"],"sourceRoot":""}