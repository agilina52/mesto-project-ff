{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/cards.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];\r\n","// Функция создания\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\nexport function createCard(\r\n  cardData,\r\n  onDeleteCard,\r\n  onLikeCard,\r\n  onOpenImagePopup\r\n) {\r\n  const cardElement = cardTemplate.cloneNode(true);\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = `Изображение места: ${cardData.name}`;\r\n  cardTitle.textContent = cardData.name;\r\n\r\n  deleteButton.addEventListener(\"click\", () => onDeleteCard(deleteButton));\r\n  likeButton.addEventListener(\"click\", () => onLikeCard(likeButton));\r\n  // cardImage.addEventListener(\"click\", onOpenImagePopup);\r\n  cardImage.addEventListener(\"click\", () => {\r\n    const cardData = {\r\n      src: cardImage.src,\r\n      alt: cardImage.alt,\r\n    };\r\n    onOpenImagePopup(cardData);\r\n  });\r\n\r\n  return cardElement;\r\n}\r\n\r\n// лайк\r\nexport function likeCard(likeButton) {\r\n  if (likeButton.classList.contains(\"card__like-button_is-active\")) {\r\n    likeButton.classList.remove(\"card__like-button_is-active\");\r\n  } else {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n}\r\n\r\n// Функция удаления карточки\r\nexport function deleteCard(deleteButton) {\r\n  const cardDelete = deleteButton.closest(\".card\");\r\n  cardDelete.remove();\r\n}\r\n","function closeEscape(event) {\r\n  if (event.key === \"Escape\") {\r\n    const openedModal = document.querySelector(\".popup_is-opened\");\r\n    if (openedModal) {\r\n      closeModal(openedModal);\r\n    }\r\n  }\r\n}\r\n\r\nexport function closeModal(modal) {\r\n  modal.classList.add(\"popup_is-animated\");\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeEscape);\r\n}\r\n\r\nexport function openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeEscape);\r\n}\r\n\r\nexport function closeOverlay(event) {\r\n  if (event.target.classList.contains(\"popup_is-opened\")) {\r\n    closeModal(event.target);\r\n  }\r\n}\r\n\r\nexport function closeBtn(event) {\r\n  if (event.target.classList.contains(\"popup__close\")) {\r\n    const modal = event.target.closest(\".popup_is-opened\");\r\n    closeModal(modal);\r\n  }\r\n}\r\n","import { initialCards } from \"./components/cards.js\";\r\nimport \"./pages/index.css\";\r\n\r\nimport { createCard, likeCard, deleteCard } from \"./components/card.js\";\r\nimport {\r\n  closeModal,\r\n  openModal,\r\n  closeOverlay,\r\n  closeBtn,\r\n} from \"./components/modal.js\";\r\n\r\nconst cardList = document.querySelector(\".places__list\");\r\n\r\n// Инициализация карточек\r\ninitialCards.forEach(function (element) {\r\n  const cardElement = createCard(element, deleteCard, likeCard, openImagePopup);\r\n  cardList.append(cardElement);\r\n});\r\n\r\n// Модальные окна\r\nconst modals = document.querySelectorAll(\".popup\");\r\nconst modalEditProfile = document.querySelector(\".popup_type_edit\");\r\nconst modalAddCard = document.querySelector(\".popup_type_new-card\");\r\nconst modalImage = document.querySelector(\".popup_type_image\");\r\nconst inputNameFormNewCard = modalAddCard.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst inputLinkFormNewCard = modalAddCard.querySelector(\r\n  \".popup__input_type_url\"\r\n);\r\nconst modalImageContent = modalImage.querySelector(\".popup__image\");\r\nconst modalImageCaption = modalImage.querySelector(\".popup__caption\");\r\n\r\n// Кнопки открытия модальных форм\r\nconst buttonEditProfile = document.querySelector(\".profile__edit-button\");\r\nconst buttonAddCard = document.querySelector(\".profile__add-button\");\r\n\r\n// Обработка сохранения карточки\r\nconst newCard = modalAddCard.querySelector(\".popup__form\");\r\n\r\n// Редактирование профиля\r\nconst formEditProfile = modalEditProfile.querySelector(\".popup__form\");\r\nconst profileNameInput = formEditProfile.querySelector(\r\n  \".popup__input_type_name\"\r\n);\r\nconst jobInput = formEditProfile.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\nconst profileSaveButton = formEditProfile.querySelector(\".button\");\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileJob = document.querySelector(\".profile__description\");\r\nconst profileErrorName = formEditProfile.querySelector(\".name-input-error\");\r\n\r\n//___________________________________________________________________________\r\n\r\n// const showError = (input) => {\r\n//  input.classList.add('popup__input_type_error')\r\n// };\r\n// удалили класс ошибки с элемента input (функция скрыть)\r\n// const hideError = (input) => {\r\n//   input.classList.remove('popup__input_type_error')\r\n// };\r\n\r\n// const errorElementProfile = formEditProfile.querySelector(\".popup__input\");\r\n// Регулярное выражение для проверки имени и описания профиля\r\n\r\n// function handleChangEditProfile() {\r\n//   const inputNameValue = profileNameInput.value;\r\n// Проверка поля имени\r\n// if (!profileNameInput.validity.valid) {\r\n//   console.log(\"Ошибка в имени\");\r\n//   profileSaveButton.disabled = true;\r\n//   profileSaveButton.classList.add(\"popup__button-inactive\");\r\n//   profileErrorName.textContent = \"Допустимы только буквы, пробелы и дефисы\";\r\n// includes  проверить вхождение подстроки в строку\r\n//     errorElementProfile.classList.add(\"popup__input_type_error\");\r\n//   } else {\r\n//     profileSaveButton.disabled = false;\r\n//     profileSaveButton.classList.remove(\"popup__button-inactive\");\r\n//     errorElementProfile.classList.remove(\"popup_input_type_error\");\r\n//     profileErrorName.textContent = \"\";\r\n//   }\r\n//   console.log(profileNameInput.validity.valid);\r\n// }\r\n\r\n// profileNameInput.addEventListener(\"input\", handleChangEditProfile);\r\n// //  включить (лампочка , выключатель)\r\n\r\n\r\n\r\n\r\n\r\n// Функция показа ошибки\r\nconst showInputError = (formElement, inputElement, errorMessage) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  console.log();\r\n  inputElement.classList.add(\"popup__input_type_error\");\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(\"popup__input-error_active\");\r\n  console.log('ошибка');\r\n};\r\n// Функция скрытия ошибки\r\nconst hideInputError = (formElement, inputElement) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  console.log();\r\n  inputElement.classList.remove(\"popup__input_type_error\");\r\n  errorElement.classList.remove(\"popup__input-error_active\");\r\n  errorElement.textContent = \"\";\r\n};\r\n// Функция проверки валидности\r\nconst isValid = (formElement, inputElement) => {\r\n  if (inputElement.validity.patterMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement);\r\n  }\r\n};\r\n// Проверка на невалидные поля//\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n// Переключение состояния кнопки\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(\"popup__button-inactive\");\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(\"popup__button-inactive\");\r\n  }\r\n};\r\n// Установка обработчиков событий\r\nconst setEventListeners = (formElement) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(\".popup__input\"));\r\n  const buttonElement = formElement.querySelector(\".popup__button\");\r\n  console.log();\r\n// Инициализация состояния кнопки\r\n  toggleButtonState(inputList, buttonElement);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      isValid(formElement, inputElement);\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n};\r\n// Включение валидации для всех форм\r\nconst enableValidation = () => {\r\n  const formList = Array.from(document.querySelectorAll(\"popup__form\"));\r\n  console.log();\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setEventListeners(formElement);\r\n});\r\n};\r\nenableValidation ();\r\n\r\n//___________________________________________________________________________\r\n\r\nfunction openImagePopup(cardData) {\r\n  modalImageContent.src = cardData.src;\r\n  modalImageContent.alt = cardData.alt;\r\n  modalImageCaption.textContent = cardData.alt.replace(\r\n    \"Изображение места: \",\r\n    \"\"\r\n  );\r\n\r\n  openModal(modalImage);\r\n}\r\n\r\nfunction fillProfileForm() {\r\n  profileNameInput.value = profileName.textContent;\r\n  jobInput.value = profileJob.textContent;\r\n}\r\n\r\nfunction handleFormSubmitProfile(evt) {\r\n  evt.preventDefault();\r\n  const nameValue = profileNameInput.value;\r\n  const jobValue = jobInput.value;\r\n  profileName.textContent = nameValue;\r\n  profileJob.textContent = jobValue;\r\n  closeModal(modalEditProfile);\r\n}\r\n\r\n// Прослушиватель нажатия по оверлею\r\nmodals.forEach((modal) => {\r\n  modal.addEventListener(\"click\", closeOverlay);\r\n});\r\n\r\n// Прослушиватель нажатия по кнопке закрытия\r\nmodals.forEach((modal) => {\r\n  modal.addEventListener(\"click\", closeBtn);\r\n});\r\n\r\n// Открытие модального окна профиля\r\nbuttonEditProfile.addEventListener(\"click\", () => {\r\n  openModal(modalEditProfile);\r\n});\r\n\r\n// Открытие модального окна добавления карточки\r\nbuttonAddCard.addEventListener(\"click\", () => {\r\n  openModal(modalAddCard);\r\n});\r\n\r\nnewCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  const newCardData = {\r\n    name: inputNameFormNewCard.value,\r\n    link: inputLinkFormNewCard.value,\r\n  };\r\n  const cardElement = createCard(\r\n    newCardData,\r\n    deleteCard,\r\n    likeCard,\r\n    openImagePopup\r\n  );\r\n  cardList.prepend(cardElement);\r\n  inputNameFormNewCard.value = \"\";\r\n  inputLinkFormNewCard.value = \"\";\r\n\r\n  closeModal(modalAddCard);\r\n});\r\n\r\n// Обработка сохранения профиля\r\nconst formProfile = modalEditProfile.querySelector(\".popup__form\");\r\nformProfile.addEventListener(\"submit\", handleFormSubmitProfile);\r\n\r\nformEditProfile.addEventListener(\"submit\", handleFormSubmitProfile);\r\ndocument\r\n  .querySelector(\".profile__edit-button\")\r\n  .addEventListener(\"click\", fillProfileForm);\r\n"],"names":["cardTemplate","document","querySelector","content","createCard","cardData","onDeleteCard","onLikeCard","onOpenImagePopup","cardElement","cloneNode","deleteButton","cardImage","cardTitle","likeButton","src","link","alt","concat","name","textContent","addEventListener","likeCard","classList","contains","remove","add","deleteCard","closest","closeEscape","event","key","openedModal","closeModal","modal","removeEventListener","openModal","closeOverlay","target","closeBtn","cardList","forEach","element","openImagePopup","append","formList","modals","querySelectorAll","modalEditProfile","modalAddCard","modalImage","inputNameFormNewCard","inputLinkFormNewCard","modalImageContent","modalImageCaption","buttonEditProfile","buttonAddCard","newCard","formEditProfile","profileNameInput","jobInput","profileName","profileJob","isValid","formElement","inputElement","validity","patterMismatch","setCustomValidity","dataset","errorMessage","valid","errorElement","id","console","log","hideInputError","showInputError","validationMessage","toggleButtonState","inputList","buttonElement","some","hasInvalidInput","disabled","replace","handleFormSubmitProfile","evt","preventDefault","nameValue","value","jobValue","Array","from","setEventListeners","prepend"],"sourceRoot":""}